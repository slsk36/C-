<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5+//Qdnk9sXj7fz8i6HJrgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm8v8U4+78wOjx///o8f//6PD//3SS
        u3UAAAAAAAAAAAAAAAAAAAAAXHurOm2EtmxdgKw0AAAAAAAAAADo8/8W4uv64ujx///o8f//6PH//83b
        7/JLaaURAAAAAAAAAAAAAP8BeJK7pr3M5vTk7fz/kaXL2AAA/wEAAAAA1+P11Ojx///o8f//6PH//+jx
        ///Az+fgAAAAAGqCtzWCmsOuhp3FzdLe8vno8f//6PH//7fG4e1ObJ0atcbia5621v98nsf/3un5/+Tt
        /P/o8f//4ev7+2yHtZW1xeDp6PH//+jx///o8f//6PH//+jx//+3x+HwTWyiIZCiyoGAm8Tub6jU/3GQ
        vf99nMX/6PH//+jx///l7f3/6PH//+jx///o8f//6PH//+jx///R3fL4dI+6jQAAAAAAAAAAUHWpWWOW
        x/FuqNT/cZ3J/3qYw//K2e7/6PH//+jx///o8f//vsHJ/7/Cyf/Z5PX8hZvElAAAAAAAAAAAAAAAAAAA
        AABMbaU2X4y95W2m0v9updL/n7XW/9He8v/o8f//6PH//7/Dyv/AxMv/gJjBtAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEdmoxlZgrbVb6fU/26Xxf+QrNH/6PH//+jx///o8f//s8Tg/WmDs2EAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAT22kKmSWxvRuptP/eJfC/4mly//W4fP/iKTK/1uCtP1VcaotAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTdaxTX42/82+o1P+GpMv/2eX3/2yWxP9pk8n/a4/HyElt
        kgcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFR9sGRafrHmusvj/+jx//+Fncb6XIK4v3uf
        2Olgg7maAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHuUvsGkt9b7mK3Q/Utp
        oDNRa6ETWXyzoExrpEMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARnSuFk1p
        nj8AAP8BAAAAAAAAAABAgL8EAAAAAP//AAD//wAA+P8AAOH/AADB4QAAgYEAAIABAAAAAQAAwAMAAOAH
        AADwDwAA+A8AAPwHAAD+AwAA/xsAAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8B6fD/Rujw/5vg6/vq5/D+/4qix/tIaaEuAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8C6PL/Yufx/9no8f//6PH//+jx///o8f//j6XK7UxooRsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6e7/Lujx/8ro8f//6PH//+jx///o8f//6PH//+jx//9ohLPpAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOnv/1Lo8f/06PH//+jx///o8f//6PH//+jx///o8f//3ej4/1p4
        rKIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJbKA7WneqpVl2qtJZd6rVXHiqmUlt
        pBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADp8P9n6PH//ujx///o8f//6PH//+jx///o8f//6PH//+jx
        //+kttfySmyiNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHY5wSV3apvnqTvuy9zeb/3uj5/+Dr
        +/+xw9/9WnapzQAAAAAAAAAAAAAAAAAAAAAAAAAA5/L/X+jx//3o8f//6PH//+jx///o8f//6PH//+jx
        ///o8f//6PH//2J+r+UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASW2SB1Z2qdu2xuL86PH//+jx
        ///o8f//6PH//+jx//9efK3pM2aZBQAAAAAAAAAAAAAAAOfz/yrn8f/56PH//+jx///o8f//6PH//+jx
        ///o8f//6PH//+jx///l7v3/XXmsvwAAAAAAAAAAAAAAAAAAAABKa6UfT2+icVdzqJ9TcafElKnN9ujx
        ///o8f//6PH//+jx///o8f//6PH//3qTvupKbJ8tAAAAAAAAAAD///8B3eb40Ojx///o8f//6PH//+jx
        ///o8f//6PH//+jx///o8f//6PH//+fw/v9ceqzLAAAAAAAAAABEZpkPWXiqsWWCseqluNj9w9Lp/8nW
        7P/k7fz/6PH//+jx///o8f//6PH//+jx///o8f//j6bL9EproU8AAAAAAAAAAMjX7mbo8f//aoa1/2mH
        tv/E0ur/6PH//+jx///o8f//6PH//+jx///o8f//6PH//4eexfBNa6MyRmiiFlt5q+C1xeD66PH//+jx
        ///o8f//6PH//+jx///o8f//6PH//+jx///o8f//6PH//+jx//+itdX7S2mhXwAAAAAAAAAAx9Xs7ujx
        //9ggLH/aqDO/11+sf+/z+f/6PH//9Xh9P/o8f//6PH//+jx///o8f//5e/9/2qFtOtYdqrO0+Dz/ujx
        ///o8f//6PH//+jx///o8f//6PH//+jx///o8f//6PH//+jx///o8f//5O79/2uGte1Ma6E5AAAAAFx6
        rRmbrtH61eH0/19/sf9wqtb/bKTR/2OCsv+9zeb/UHGm/8LR6f/o8f//6PH//+jx///o8f//5e/9/8HQ
        6fzo8f//6PH//+jx///o8f//6PH//+jx///o8f//6PH//+jx///o8f//6PH//+Xv/v95kr3xVHWngwAA
        AAAAAAAATWaZCklpoUlUdKd/TnGm93Cq1v9wqtb/X4a3/1p7rf9onMr/ZYOz/+jx///n8P7/6PH//+jx
        ///o8f//6PH//+jx///o8f//6PH//+jx///o8f//6PH//+jx///o8f//6PH//+jx///m7/7/epO98Fl0
        qooAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPcabZb6jU/3Cq1v9vqNT/baXR/3Cq1v9egbL/ztrw/2OB
        sf/T3/L/6PH//+jx///o8f//6PH//+jx///o8f//6PH//+jx///d5fH/3uXy/+jx///o8f//5/D+/32W
        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
        AH//8AA///gAH//+Aw///wPP//+B9///9///////
</value>
  </data>
</root>